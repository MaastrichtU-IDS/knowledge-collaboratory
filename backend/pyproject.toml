[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
requires-python = ">=3.9,<3.10"
version = "0.1.0"
name = "knowledge-collaboratory-api"
description = "An API for the Knowledge Collaboratory developed at the Institute of Data Science at Maastricht University"
# readme = "../README.md"
# license = { file = "../LICENSE" }
authors = [
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
]
keywords = [
    "Python",
    "Biomedical Data Translator",
    "TRAPI",
    "Annotations"
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
]

dependencies = [
    "python-multipart >=0.0.5",
    "requests >=2.23.0",
    "httpx >=0.21.1",
    "pydantic[dotenv] >=1.9",
    "fastapi >=0.68.1",
    "uvicorn >=0.15.0",
    "gunicorn >=20.0.4",
    "Authlib >=0.15.4",
    "itsdangerous >=2.0.1",
    "reasoner-pydantic >=2.2.3",
    # "reasoner-pydantic ==3.0.1",
    # TODO: we can remove kgx once poetry finally manage to find 3.1.5
    # "kgx >=1.6.0",
    "rdflib >=6.1.1",
    "SPARQLWrapper >=1.8.5",
    "transformers >=4.17.0",
    "spacy[cuda110] >=3.2.3",
    "spacy-transformers >=1.1.5",
    # "nanopub >=2.0.0",
    "nanopub@git+https://github.com/vemonet/nanopub.git#better-import-keys",
    "pyshacl >=0.20.0",
    # "pyshacl@git+https://github.com/vemonet/pySHACL.git@fix-subclassof-node-constraints",
    "openai >=0.27.2 ",
    "PyYAML",
    # "ontogpt@file:///opt/ontogpt",
    # "ontogpt@{root:uri}/ontogpt",
    # "ontogpt",
]

[project.optional-dependencies]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "ruff >=0.0.219",
    "reasoner-validator >=3.1.4",
    "httpx",
]
dev = [
    "pre-commit >=2.17.0,<3.0.0",
    "pip-tools",
    "uvicorn >=0.15.0",
    # "gunicorn >=20.0.4",
    "types-requests",
]


[project.urls]
Homepage = "https://github.com/MaastrichtU-IDS/knowledge-collaboratory"
Documentation = "https://github.com/MaastrichtU-IDS/knowledge-collaboratory"
History = "https://github.com/MaastrichtU-IDS/knowledge-collaboratory/releases"
Tracker = "https://github.com/MaastrichtU-IDS/knowledge-collaboratory/issues"
Source = "https://github.com/MaastrichtU-IDS/knowledge-collaboratory"


# HATCH CONFIG: ENVIRONMENTS AND SCRIPTS

[tool.hatch.envs.default]
features = [
    "test",
    "dev",
]
# post-install-commands = [
#     "pre-commit install",
# ]


[tool.hatch.envs.default.scripts]
dev = "uvicorn app.main:app --reload"
api = "BACKEND_URL=http://localhost:8000 uvicorn app.main:app --host localhost --port 8000 --reload {args}"
test = "pytest {args}"
fmt = [
    "ruff app tests --fix",
]
check = [
    "ruff app tests",
]
compile = "pip-compile --resolver=backtracking --extra dev --extra test -o requirements.txt pyproject.toml {args}"


[tool.hatch.metadata]
allow-direct-references = true


# OTHER TOOLS

[tool.coverage.run]
source = ["app"]
branch = true


[tool.ruff]
src = ["app", "tests"]
target-version = "py39"
line-length = 120
select = [
    "A",
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "E",  # pycodestyle errors
    "F",  # pyflakes
    # "FBT", # flake8-boolean-trap
    "I",  # isort
    "ICN",
    "N",
    "PLC",
    "PLE",
    # "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",  # pycodestyle warnings
    "YTT",
]

ignore = [
    "Q000", # no single quotes
    "N806", "N802", "N803", # lowercase variables
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "B006", # do not use mutable data structures for argument defaults
    "C901", # too complex
    "S101", # Use of `assert` detected
    "T201", "T203", # remove print and pprint
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["I", "F401"]
