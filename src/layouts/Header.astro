---
import {settings} from '../utils/settings'
import OrcidLogin from '../components/OrcidLogin'

import Icon from '../components/Icon.astro';

interface MenuLink {
  text?: string;
  href?: string;
  tooltip?: string;
  icon?: string;
  img?: string;
  cssClass?: string;
}
export interface Props {
  leftLinks?: Array<MenuLink>;
  rightLinks?: Array<MenuLink>;
}

const {
  leftLinks = [
    {
      text: "Browse Nanopubs",
      tooltip: "üîçÔ∏è Browse Nanopublications",
      href: `${settings.basePath}/`,
      icon: "search",
    },
    {
      text: "Annotate text",
      tooltip: "üè∑Ô∏è Annotate biomedical text, and publish the assertion as Nanopublication",
      href: `${settings.basePath}/annotate`,
      icon: "local_offer",
    },
    {
      text: "Shape form",
      tooltip: "üìù Define and publish RDF nanopublications from SHACL shapes",
      href: `${settings.basePath}/shape-publisher`,
      icon: "dynamic_form",
    },
  ],

  rightLinks = [
    {
      text: "API",
      tooltip: "üìñ Access the OpenAPI documentation of the API used by this service",
      href: settings.docsUrl,
      // icon: "search",
      img: "openapi_logo.svg",
    },
    {
      tooltip: "‚ÑπÔ∏è About the Knowledge Collaboratory",
      href: `${settings.basePath}/about`,
      icon: "info",
    },
    {
      tooltip: "Source code on GitHub",
      href: "https://github.com/MaastrichtU-IDS/knowledge-collaboratory",
      img: "github.svg",
      cssClass: "whiteSvgIcon",
    },
  ],
} = Astro.props;
---

<header>
  <nav class="browserNav" aria-label="Main navigation">
    <ul>
      <li>
        <a href={`${settings.basePath}/`}>
          <img
            src={`${settings.basePath}/icon.png`}
            alt="Logo"
            width={32}
            height={32}
          />
        </a>
      </li>
      {
        leftLinks.map(({ text, href, tooltip, icon }) => (
          <li title={tooltip}>
            <a href={href}>
              <Icon name={icon} />
              <span>{text}</span>
            </a>
          </li>
        ))
      }

    </ul>

    <div style="flex-grow: 1;" />
    <hr class="menuSeparator">

    <ul style='margin-right: 32px;'>
      <li title="üîìÔ∏è Login with your ORCID to be able to publish text annotations as Nanopublications" style='margin-right: 24px;'>
        <OrcidLogin client:only='react' />
      </li>
      {
        rightLinks.map(({ text, href, tooltip, icon, cssClass, img }) => (
          <li title={tooltip}>
            <a href={href}>
              { icon &&
                <Icon name={icon} />
              }
              { img &&
                <img
                  src={`${settings.basePath}/${img}`}
                  alt={text || tooltip}
                  width={22}
                  height={22}
                  class={cssClass}
                />
              }
              { text &&
                <span>{text}</span>
              }
            </a>
          </li>
        ))
      }
    </ul>
  </nav>


  <!-- Menu for small screens -->
  <div>
    <div class="toggleMenu">
      <button type="button" aria-label="Toggle menu">
        <Icon name='menu' class="menuIcon" />
      </button>
    </div>
  </div>
</header>

<script>
  const toggle = document.querySelector('div.toggleMenu');
  toggle?.addEventListener('click', () => {
    const menu = document.querySelector('nav.browserNav');
    if (menu && menu.classList.contains("show")) {
      menu.classList.remove('show');
    } else if (menu) {
      menu.classList.add("show");
    }
  });
</script>


<style>
  header {
    transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    box-shadow: 0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
    box-sizing: border-box;
    -webkit-flex-shrink: 0;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    position: static;
    background-color: var(--color-primary);
    color: var(--color-white);
  }
  nav, ul {
    list-style-type: none;
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  ul {
    margin: 4px;
  }
  a {
    display: flex;
    align-items: center;
    margin-right: 24px;
    padding: 4px 8px;
    color: var(--color-white);
    font-size: 12px;
  }
  a:hover {
    color: var(--color-white);
    background-color: var(--color-primary-dark);
    border-radius: 4px;
  }
  span {
    margin-left: 8px;
  }

  /* .toggleMenu button {
    background-color: var(--color-white);
    opacity: 1;
    color: var(--color-white);
    background-color: var(--color-primary-dark);
    border-radius: 4px;
  } */

  .toggleMenu {
    display: none;
  }
  /* For small screens */
  @media (max-width: 980px) {
    .toggleMenu {
      display: flex;
      margin: 8px;
    }
    .toggleMenu button {
      /* border-radius: 4px; */
      /* color: var(--color-white);
      background-color: var(--color-white); */
    }
    nav.browserNav {
      display: none;
    }
    .browserNav.show {
      display: block;
      flex-direction: column;
      text-align: left;
    }
    a {
      margin-top: 8px;
    }
    ul {
      flex-direction: column;
      align-items: left;
    }
    .menuSeparator {
      display: inherit;
      opacity: 0.4;
    }
  }

  /* Add tooltip for titles, but conflict with firefox built in tooltip */
  /* [title] {
    position: relative;
  }
  [title]:after {
    content: attr(title);
    position: absolute;
    top: 150%;
    background-color: var(--color-grey);
    padding: 4px;
    border-radius: 4px;
    width: max-content;
    opacity: 0;
    -webkit-transition: opacity 0s ease-in-out;
  }
  [title]:hover:after {
    opacity: 0.95;
    color: black;
  } */
</style>